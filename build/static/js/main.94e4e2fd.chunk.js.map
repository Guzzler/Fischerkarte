{"version":3,"sources":["serviceWorker.js","react-app/reducers/index.js","common/utils/index.js","common/middlewares/getAPI.js","common/middlewares/postAPI.js","store.js","react-app/components/main-content/BaseContent.js","common/error-pages/PageNotFound.js","react-app/components/MainContent.js","react-app/components/Base.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","base","mainReducer","state","action","type","camelCaseKeys","data","Array","isArray","camelCaseKeysInArray","nestedCamelCasedData","Object","keys","reduce","config","datum","camelCaseKeysInObject","arr","map","elem","obj","key","prototype","hasOwnProperty","call","camelCasedKey","camelCaseString","toUpperCaseStringForCamel","group","Number","toUpperCase","str","replace","GET_API","Symbol","postApi","endpoint","payload","method","payloadAsIs","skipCsrfToken","Promise","resolve","reject","request","XMLHttpRequest","modifiedPayload","Error","snakeCased","$1","toLowerCase","snakeCaseKeys","params","JSON","stringify","open","setRequestHeader","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","onload","status","jsonResponse","parse","responseText","isServerOK","handle200To400","json","e","handle400AndAbove","send","POST_API","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","next","getAPI","types","getState","every","requestType","successType","failureType","actionWith","finalAction","successHandler","response","successTypeActionProps","onSuccess","dispatch","failureHandler","error","message","onFailure","requestTypeActionData","requestTypeActionProps","fetch","credentials","then","catch","ok","camelizedJson","getApi","postAPI","isPayloadJson","failureTypeActionData","errors","form","failureTypeActionProps","console","stack","handlePostApi","BaseContent","className","span","React","Component","connect","PageNotFound","style","marginTop","textAlign","width","offset","to","RouteContainer","posed","div","enter","opacity","delay","beforeChildren","exit","MainContent","render","path","component","Content","Layout","Base","theme","App","app","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wJAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4BCjBAC,G,MAAe,CACnBC,KAAM,KAYOC,EARK,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAGhD,OAFIA,EAAOC,KAEJF,G,eCTAG,EAAgB,SAACC,GAC5B,GAAIC,MAAMC,QAAQF,GAChB,OAAOG,EAAqBH,GAG9B,IAAMI,EAAuBC,OAAOC,KAAKN,GAAMO,QAAO,SAACC,EAAQC,GAO7D,OANIR,MAAMC,QAAQF,EAAKS,IACrBD,EAAOC,GAASN,EAAqBH,EAAKS,IAE1CD,EAAOC,GAASC,EAAsBV,EAAKS,IAGtCD,IACN,IAEH,OAAOE,EAAsBN,IAGzBD,EAAuB,SAACQ,GAC5B,OAAOA,EAAIC,KAAI,SAAAC,GAAI,OAAIH,EAAsBG,OAGzCH,EAAwB,SAAxBA,EAAyBI,GAC7B,IAAK,IAAMC,KAAOD,EAChB,GAAIT,OAAOW,UAAUC,eAAeC,KAAKJ,EAAKC,GAAM,CAClD,IAAMI,EAAgBC,EAAgBL,GAClCI,IAAkBJ,IACpBD,EAAIK,GAAiBL,EAAIC,UAClBD,EAAIC,IAGqB,kBAAvBD,EAAIK,KACTlB,MAAMC,QAAQY,EAAIK,IACpBL,EAAIK,GAAiBhB,EAAqBW,EAAIK,IAE9CL,EAAIK,GAAiBT,EAAsBI,EAAIK,KAMvD,OAAOL,GAEHO,EAA4B,SAAC7B,EAAO8B,GACxC,OAAIC,OAAOD,IAAU,GAAKC,OAAOD,IAAU,EACnC,IAAN,OAAWA,GAENA,EAAME,eAGTJ,EAAkB,SAACK,GAAD,OAASA,EAAIC,QAAQ,QAASL,ICV/C,IAAMM,EAAUC,OAAO,WCZvB,SAASC,EAAT,GAAuF,IAAnEC,EAAkE,EAAlEA,SAAUC,EAAwD,EAAxDA,QAAwD,IAA/CC,cAA+C,MAAtC,OAAsC,EAA9BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,cAC1E,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAU,IAAIC,eAChBC,EAAkBT,EACjBE,IACHO,EFmBC,SAAwBxC,GAC7B,GAAIC,MAAMC,QAAQF,GAChB,MAAMyC,MAAM,gDAGd,OAAOpC,OAAOC,KAAKN,GAAMO,QAAO,SAACmC,EAAYjC,GAK3C,OADAiC,EAHuBjC,EAAMiB,QAAQ,YAAY,SAACiB,GAChD,MAAO,IAAMA,EAAGC,kBAEW5C,EAAKS,GAC3BiC,IACN,IE9BmBG,CAAcd,IAElC,IAAMe,EAASC,KAAKC,UAAUR,GAC9BF,EAAQW,KAAKjB,EAAQF,GAAU,GAC1BI,GACHI,EAAQY,iBAAiB,cF4BxB,SAAoBC,GACzB,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE9B,IADA,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KAC7BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,IAAMH,EAASC,EAAQE,GAAGE,OAE1B,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACzDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIN,OAAON,EEzCqCU,CAAU,cAAgB,IAEpExB,EAAQY,iBAAiB,eAAgB,oBACzCZ,EAAQyB,OAAS,WACXzB,EAAQ0B,QAAU,KAAO1B,EAAQ0B,OAAS,IAtBpD,SAAyB1B,EAASF,GAChC,IAAM6B,EAAmC,MAAnB3B,EAAQ0B,OAAkB,GAAKjE,EAAcgD,KAAKmB,MAAM5B,EAAQ6B,eACtF/B,EAAQ,aACNgC,YAAY,GACTH,IAmBCI,CAAe/B,EAASF,GAxChC,SAA4BE,EAASD,GAAS,IACpC2B,EAAyB1B,EAAzB0B,OAAQG,EAAiB7B,EAAjB6B,aAEhB,IACE,IAAMG,EAAOvB,KAAKmB,MAAMC,GACxB9B,EAAO,CACLiC,KAAMvE,EAAcuE,GACpBN,WAEF,MAAOO,GACPlC,EAAO,CACLiC,KAAM,GACNN,YA8BEQ,CAAkBlC,EAASD,IAG/BC,EAAQmC,KAAK3B,MAIV,IAAM4B,EAAW9C,OAAO,YC7CzB+C,EAAkBtF,OAAOuF,sCAAwCC,IAexDC,EALLC,YAAYC,EAASL,EAC3BM,YAAgBC,KF0BL,SAAAJ,GAAK,OAAI,SAAAK,GAAI,OAAI,SAAAtF,GAC9B,IAAMuF,EAASvF,EAAO8B,GACtB,GAAsB,qBAAXyD,EACT,OAAOD,EAAKtF,GAH0B,IAMlCiC,EAAasD,EAAbtD,SACEuD,EAAUD,EAAVC,MAMR,GAJwB,oBAAbvD,IACTA,EAAWA,EAASgD,EAAMQ,aAGJ,kBAAbxD,EACT,MAAM,IAAIW,MAAM,kCAElB,IAAKxC,MAAMC,QAAQmF,IAA2B,IAAjBA,EAAM3B,OACjC,MAAM,IAAIjB,MAAM,4CAElB,IAAK4C,EAAME,OAAM,SAAAzF,GAAI,MAAoB,kBAATA,KAC9B,MAAM,IAAI2C,MAAM,wCApBsB,kBAuBQ4C,EAvBR,GAuBjCG,EAvBiC,KAuBpBC,EAvBoB,KAuBPC,EAvBO,KAyBxC,SAASC,EAAY3F,GACnB,IAAM4F,EAAW,2BAAQ/F,GAAWG,GAEpC,cADO4F,EAAYjE,GACZiE,EAGT,SAASC,EAAgBC,GACnBV,EAAOW,uBACTZ,EAAKQ,EAAW,yBAAEG,YAAaV,EAAOW,wBAAvB,IAA+CjG,KAAM2F,MAEpEN,EAAKQ,EAAW,CAAEG,WAAUhG,KAAM2F,KAJH,IAMzBO,EAAcZ,EAAdY,UACR,GAAIA,EAAW,CACb,GAAyB,oBAAdA,EACT,MAAM,IAAIvD,MAAM,yCAElBuD,EAAUF,EAAUhB,EAAMQ,WAAYR,EAAMmB,WAQhD,SAASC,EAAgBJ,GACvBA,EAAS9B,OAAS8B,EAAS9B,QAAU,EAErCmB,EAAKQ,EAAW,CACd7F,KAAM4F,EACNS,MAAOL,EAASM,SAAW,4BALI,IAQzBC,EAAcjB,EAAdiB,UAER,GAAIA,EAAW,CACb,GAAyB,oBAAdA,EACT,MAAM,IAAI5D,MAAM,yCAElB4D,EAAUP,EAAUhB,EAAMQ,WAAYR,EAAMmB,WAIhD,IAAIK,EAAwB,CAAExG,KAAM0F,GAMpC,OAJIJ,EAAOmB,yBACTD,EAAqB,2BAAQA,GAA0BlB,EAAOmB,yBAEhEpB,EAAKQ,EAAWW,IAjHlB,SAAiBxE,GACf,OAAO0E,MAAM1E,EAAU,CACrB2E,YAAa,gBAEZC,MAAK,SAAAZ,GACJ,OAAOA,EAASxB,OAAOoC,MAAK,SAAApC,GAAI,MAAK,CAAEA,OAAMwB,eAAaa,OAAM,WAC9D,OAAIb,EAASc,GACJzE,QAAQC,QAAQ,CAAE0D,aAGpB3D,QAAQE,OAAO,CACpB2B,OAAQ8B,EAAS9B,eAGpB0C,MAAK,YAAyB,IAAtBpC,EAAqB,EAArBA,KAAMwB,EAAe,EAAfA,SACX7F,MAAMC,QAAQoE,GAChBA,EAAO,CACLtE,KAAMsE,GAEiB,kBAATA,IAChBA,EAAO,IAETA,EAAKF,aAAe0B,EAASc,GAC7B,IAAMC,EAAgB9G,EAAcuE,GACpC,OAAKuC,EAAczC,WAOZ,eAAKyC,GALH1E,QAAQE,OAAR,aACL2B,OAAQ8B,EAAS9B,QACd6C,OA2DFC,CAAOhF,GAAU4E,KAAKb,EAAgBK,QCrClC,SAAApB,GAAK,OAAI,SAAAK,GAAI,OAAI,SAAAtF,GAC9B,IAAMkH,EAAUlH,EAAO6E,GACvB,GAAuB,qBAAZqC,EACT,OAAO5B,EAAKtF,GAH0B,IAMlCiC,EAAsBiF,EAAtBjF,SAAUC,EAAYgF,EAAZhF,QANwB,EAOLgF,EAA3B/E,cAPgC,MAOvB,OAPuB,EAOfqD,EAAU0B,EAAV1B,MAPe,cAQQA,EARR,GAQjCG,EARiC,KAQpBC,EARoB,KAQPC,EARO,KAaxC,GAHwB,oBAAb5D,IACTA,EAAWA,EAASgD,EAAMQ,aAEJ,kBAAbxD,EACT,MAAM,IAAIW,MAAM,kCAOlB,GAJuB,oBAAZV,IACTA,EAAUA,EAAQ+C,EAAMQ,aAGH,kBAAZvD,EACT,MAAM,IAAIU,MAAM,wCAGlB,IAAKxC,MAAMC,QAAQmF,IAA2B,IAAjBA,EAAM3B,OACjC,MAAM,IAAIjB,MAAM,4CAElB,IAAK4C,EAAME,OAAM,SAAAzF,GAAI,MAAoB,kBAATA,KAC9B,MAAM,IAAI2C,MAAM,wCAGlB,SAASkD,EAAY3F,GACnB,IAAM4F,EAAW,2BAAQ/F,GAAWG,GAEpC,cADO4F,EAAYlB,GACZkB,EA2DT,IAAIU,EAAwB,CAAExG,KAAM0F,GAKpC,OAJIuB,EAAQR,yBACVD,EAAqB,2BAAQA,GAA0BS,EAAQR,yBAEjEpB,EAAKQ,EAAWW,IA5DhB,WAA2B,IAAD,EACQS,EAAxB9E,mBADgB,WAEU8E,EAA1BC,qBAFgB,WAGUD,EAA1B7E,cAER,OAAOL,EAAQ,CAAEC,WAAUC,UAASC,SAAQC,cAAa+E,gBAAe9E,mBALhD,WAKiEwE,MACvF,SAAAZ,GACMiB,EAAQhB,uBACVZ,EAAKQ,EAAW,yBAAEG,YAAaiB,EAAQhB,wBAAxB,IAAgDjG,KAAM2F,MAErEN,EAAKQ,EAAW,CAAEG,WAAUhG,KAAM2F,KAJ1B,IAOFO,EAAce,EAAdf,UACR,GAAIA,EAAW,CACb,GAAyB,oBAAdA,EACT,MAAM,IAAIvD,MAAM,yCAElBuD,EAAUF,EAAUhB,EAAMQ,WAAYR,EAAMmB,cAGhD,YAAiC,IAA9BjC,EAA6B,EAA7BA,OAAc8B,EAAe,EAArBxB,KAGT,GAAsB,qBAAXN,EAIX,IAAK,IAAD,EACEiD,EAAwB,CAC1BC,OAAM,OAAEpB,QAAF,IAAEA,GAAF,UAAEA,EAAUqB,YAAZ,aAAE,EAAgBD,QAGtBH,EAAQK,yBACVH,EAAqB,2BAAQA,GAA0BF,EAAQK,yBAGjEjC,EAAKQ,EAAW,aACd7F,KAAM4F,GACHuB,KAXH,IAcMZ,EAAcU,EAAdV,UACR,GAAIA,EAAW,CACb,GAAyB,oBAAdA,EACT,MAAM,IAAI5D,MAAM,yCAElB4D,EAAUP,EAAUhB,EAAMQ,WAAYR,EAAMmB,WAE9C,MAAO1B,GACP8C,QAAQlB,MAAM5B,EAAE+C,WAWjBC,U,gGEnJHC,E,uKAEF,OACE,kBAAC,IAAD,CAAKC,UAAU,2DACb,kBAAC,IAAD,CAAKC,KAAM,GAAID,UAAU,qBAAzB,oH,GAJkBE,IAAMC,WAsBjBC,eANS,SAAC,GACvB,MAAO,CACLnI,KAFkC,EAAXA,QAOR,GADJmI,CAEZL,G,SCXYM,EAfM,WACnB,OACE,kBAAC,IAAD,CAAKC,MAAO,CAAEC,UAAW,GAAIC,UAAW,SAAUC,MAAO,SACvD,kBAAC,IAAD,CAAKR,KAAM,GAAIS,OAAQ,GACrB,wBAAIV,UAAU,OAAd,SACA,wBAAIA,UAAU,OAAd,oBACA,wBAAIA,UAAU,mBAAd,2CACA,kBAAC,IAAD,CAAQ3H,KAAK,WACX,kBAAC,IAAD,CAAMsI,GAAG,KAAT,wBCDJC,EAAiBC,IAAMC,IAAI,CAC/BC,MAAO,CAAEC,QAAS,EAAGC,MAAO,IAAKC,gBAAgB,GACjDC,KAAM,CAAEH,QAAS,KAqBJI,MAlBf,WACE,OACE,kBAAC,IAAD,CACEC,OAAQ,gBAAGxJ,EAAH,EAAGA,SAAH,OACN,kBAAC,IAAD,CAAKmI,UAAU,+BACb,kBAAC,IAAD,KACE,kBAACY,EAAD,CAAgBtH,IAAK,QACnB,kBAAC,IAAD,CAAQzB,SAAUA,GAChB,kBAAC,IAAD,CAAOyJ,KAAK,IAAIC,UAAWxB,EAAazG,IAAI,SAC5C,kBAAC,IAAD,CAAO+H,OAAQ,kBAAM,kBAAC,EAAD,OAAkB/H,IAAI,qBCpBnDkI,EAAYC,IAAZD,QAYOE,MAVf,WACE,OACE,kBAAC,IAAD,CAAQ1B,UAAU,kBAChB,kBAACwB,EAAD,CAASG,MAAM,QAAQ3B,UAAU,kBAC/B,kBAAC,EAAD,SCWO4B,EAVH,kBACV,kBAAC,IAAD,KACE,yBAAK5B,UAAU,cACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsB,KAAK,IAAIC,UAAWG,QCN7BG,EACJ,kBAAC,IAAD,CAAUxE,MAAOA,GACf,kBAAC,EAAD,OAIJyE,IAAST,OAAOQ,EAAKjG,SAASmG,eAAe,aXmHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjD,MAAK,SAAAkD,GACJA,EAAaC,gBAEdlD,OAAM,SAAAR,GACLkB,QAAQlB,MAAMA,EAAMC,a","file":"static/js/main.94e4e2fd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","\nconst initialState = {\n  base: {\n  }\n}\n\nconst mainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default: {\n      return state\n    }\n  }\n}\n\nexport default mainReducer\n","export const camelCaseKeys = (data) => {\n  if (Array.isArray(data)) {\n    return camelCaseKeysInArray(data)\n  }\n\n  const nestedCamelCasedData = Object.keys(data).reduce((config, datum) => {\n    if (Array.isArray(data[datum])) {\n      config[datum] = camelCaseKeysInArray(data[datum])\n    } else {\n      config[datum] = camelCaseKeysInObject(data[datum])\n    }\n\n    return config\n  }, {})\n\n  return camelCaseKeysInObject(nestedCamelCasedData)\n}\n\nconst camelCaseKeysInArray = (arr) => {\n  return arr.map(elem => camelCaseKeysInObject(elem))\n}\n\nconst camelCaseKeysInObject = (obj) => {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const camelCasedKey = camelCaseString(key)\n      if (camelCasedKey !== key) {\n        obj[camelCasedKey] = obj[key]\n        delete obj[key]\n      }\n\n      if (typeof obj[camelCasedKey] === 'object') {\n        if (Array.isArray(obj[camelCasedKey])) {\n          obj[camelCasedKey] = camelCaseKeysInArray(obj[camelCasedKey])\n        } else {\n          obj[camelCasedKey] = camelCaseKeysInObject(obj[camelCasedKey])\n        }\n      }\n    }\n  }\n\n  return obj\n}\nconst toUpperCaseStringForCamel = (match, group) => {\n  if (Number(group) >= 0 || Number(group) <= 9) {\n    return `_${group}`\n  }\n  return group.toUpperCase()\n}\n\nconst camelCaseString = (str) => str.replace(/_(.)/g, toUpperCaseStringForCamel)\n\nexport function snakeCaseKeys (data) {\n  if (Array.isArray(data)) {\n    throw Error('snakeCaseKeys doesn\\'t support arrays for now')\n  }\n\n  return Object.keys(data).reduce((snakeCased, datum) => {\n    const snakedCasedKey = datum.replace(/([A-Z])/g, ($1) => {\n      return '_' + $1.toLowerCase()\n    })\n    snakeCased[snakedCasedKey] = data[datum]\n    return snakeCased\n  }, {})\n}\n\nexport function getCookie (name) {\n  let cookieValue = null\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';')\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim()\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1))\n        break\n      }\n    }\n  }\n  return cookieValue\n}\n\n","import { camelCaseKeys } from '../utils'\n\n// Fetches an API response and normalizes the result JSON according to schema.\n// This makes every API response have the same shape, regardless of how nested it was.\nfunction getApi (endpoint) {\n  return fetch(endpoint, {\n    credentials: 'same-origin'\n  })\n    .then(response => {\n      return response.json().then(json => ({ json, response })).catch(() => {\n        if (response.ok) {\n          return Promise.resolve({ response })\n        }\n        // eslint-disable-next-line prefer-promise-reject-errors\n        return Promise.reject({\n          status: response.status\n        })\n      })\n    }).then(({ json, response }) => {\n      if (Array.isArray(json)) {\n        json = {\n          data: json\n        }\n      } else if (typeof json !== 'object') {\n        json = {}\n      }\n      json.isServerOK = !!response.ok\n      const camelizedJson = camelCaseKeys(json)\n      if (!camelizedJson.isServerOK) {\n        // eslint-disable-next-line prefer-promise-reject-errors\n        return Promise.reject({\n          status: response.status,\n          ...camelizedJson\n        })\n      }\n      return { ...camelizedJson }\n    })\n}\n\n// Action key that carries API get info interpreted by this Redux middleware.\nexport const GET_API = Symbol('Get API')\n\n// A Redux middleware that interprets actions with GET_API info specified.\n// Performs the get and promises when such actions are dispatched.\nexport default store => next => action => {\n  const getAPI = action[GET_API]\n  if (typeof getAPI === 'undefined') {\n    return next(action)\n  }\n\n  let { endpoint } = getAPI\n  const { types } = getAPI\n\n  if (typeof endpoint === 'function') {\n    endpoint = endpoint(store.getState())\n  }\n\n  if (typeof endpoint !== 'string') {\n    throw new Error('Specify a string endpoint URL.')\n  }\n  if (!Array.isArray(types) || types.length !== 3) {\n    throw new Error('Expected an array of three action types.')\n  }\n  if (!types.every(type => typeof type === 'string')) {\n    throw new Error('Expected action types to be strings.')\n  }\n\n  const [requestType, successType, failureType] = types\n\n  function actionWith (data) {\n    const finalAction = { ...action, ...data }\n    delete finalAction[GET_API]\n    return finalAction\n  }\n\n  function successHandler (response) {\n    if (getAPI.successTypeActionProps) {\n      next(actionWith({ response, ...getAPI.successTypeActionProps, type: successType }))\n    } else {\n      next(actionWith({ response, type: successType }))\n    }\n    const { onSuccess } = getAPI\n    if (onSuccess) {\n      if (typeof onSuccess !== 'function') {\n        throw new Error('Success Callback should be a function')\n      }\n      onSuccess(response, store.getState(), store.dispatch)\n    }\n  }\n\n  function handleGetApi () {\n    return getApi(endpoint).then(successHandler, failureHandler)\n  }\n\n  function failureHandler (response) {\n    response.status = response.status || 0\n\n    next(actionWith({\n      type: failureType,\n      error: response.message || 'Something bad happened'\n    }))\n\n    const { onFailure } = getAPI\n\n    if (onFailure) {\n      if (typeof onFailure !== 'function') {\n        throw new Error('Failure Callback should be a function')\n      }\n      onFailure(response, store.getState(), store.dispatch)\n    }\n  }\n\n  let requestTypeActionData = { type: requestType }\n\n  if (getAPI.requestTypeActionProps) {\n    requestTypeActionData = { ...requestTypeActionData, ...getAPI.requestTypeActionProps }\n  }\n  next(actionWith(requestTypeActionData))\n  return handleGetApi()\n}\n","\nimport { camelCaseKeys, getCookie, snakeCaseKeys } from '../utils'\n\nfunction handle400AndAbove (request, reject) {\n  const { status, responseText } = request\n  // any other 4xx error should send back a json response with errors\n  try {\n    const json = JSON.parse(responseText)\n    reject({\n      json: camelCaseKeys(json),\n      status\n    })\n  } catch (e) {\n    reject({\n      json: {},\n      status\n    })\n  }\n}\n\nfunction handle200To400 (request, resolve) {\n  const jsonResponse = (request.status === 204) ? {} : camelCaseKeys(JSON.parse(request.responseText))\n  resolve({\n    isServerOK: true,\n    ...jsonResponse\n  })\n}\n\nexport function postApi ({ endpoint, payload, method = 'POST', payloadAsIs, skipCsrfToken }) {\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest()\n    let modifiedPayload = payload\n    if (!payloadAsIs) {\n      modifiedPayload = snakeCaseKeys(payload)\n    }\n    const params = JSON.stringify(modifiedPayload)\n    request.open(method, endpoint, true)\n    if (!skipCsrfToken) {\n      request.setRequestHeader('X-CSRFToken', getCookie('csrftoken') || '')\n    }\n    request.setRequestHeader('Content-type', 'application/json')\n    request.onload = () => {\n      if (request.status >= 200 && request.status < 400) {\n        handle200To400(request, resolve)\n      } else {\n        handle400AndAbove(request, reject)\n      }\n    }\n    request.send(params)\n  })\n}\n\nexport const POST_API = Symbol('Post API')\n\nexport default store => next => action => {\n  const postAPI = action[POST_API]\n  if (typeof postAPI === 'undefined') {\n    return next(action)\n  }\n\n  let { endpoint, payload } = postAPI\n  const { method = 'post', types } = postAPI\n  const [requestType, successType, failureType] = types\n\n  if (typeof endpoint === 'function') {\n    endpoint = endpoint(store.getState())\n  }\n  if (typeof endpoint !== 'string') {\n    throw new Error('Specify a string endpoint URL.')\n  }\n\n  if (typeof payload === 'function') {\n    payload = payload(store.getState())\n  }\n\n  if (typeof payload !== 'object') {\n    throw new Error('Specify the payload for POST request')\n  }\n\n  if (!Array.isArray(types) || types.length !== 3) {\n    throw new Error('Expected an array of three action types.')\n  }\n  if (!types.every(type => typeof type === 'string')) {\n    throw new Error('Expected action types to be strings.')\n  }\n\n  function actionWith (data) {\n    const finalAction = { ...action, ...data }\n    delete finalAction[POST_API]\n    return finalAction\n  }\n\n  function handlePostApi () {\n    const { payloadAsIs = false } = postAPI\n    const { isPayloadJson = false } = postAPI\n    const { skipCsrfToken = false } = postAPI\n\n    return postApi({ endpoint, payload, method, payloadAsIs, isPayloadJson, skipCsrfToken }).then(\n      response => {\n        if (postAPI.successTypeActionProps) {\n          next(actionWith({ response, ...postAPI.successTypeActionProps, type: successType }))\n        } else {\n          next(actionWith({ response, type: successType }))\n        }\n\n        const { onSuccess } = postAPI\n        if (onSuccess) {\n          if (typeof onSuccess !== 'function') {\n            throw new Error('Success Callback should be a function')\n          }\n          onSuccess(response, store.getState(), store.dispatch)\n        }\n      },\n      ({ status, json: response }) => {\n        // stop going any further if rejection promise didn't send in status\n        // this would happen only for 401s and 403s.\n        if (typeof status === 'undefined') {\n          return\n        }\n\n        try {\n          let failureTypeActionData = {\n            errors: response?.form?.errors\n          }\n\n          if (postAPI.failureTypeActionProps) {\n            failureTypeActionData = { ...failureTypeActionData, ...postAPI.failureTypeActionProps }\n          }\n\n          next(actionWith({\n            type: failureType,\n            ...failureTypeActionData\n          }))\n\n          const { onFailure } = postAPI\n          if (onFailure) {\n            if (typeof onFailure !== 'function') {\n              throw new Error('Failure Callback should be a function')\n            }\n            onFailure(response, store.getState(), store.dispatch)\n          }\n        } catch (e) {\n          console.error(e.stack) // eslint-disable-line no-console\n        }\n      }\n    )\n  }\n\n  let requestTypeActionData = { type: requestType }\n  if (postAPI.requestTypeActionProps) {\n    requestTypeActionData = { ...requestTypeActionData, ...postAPI.requestTypeActionProps }\n  }\n  next(actionWith(requestTypeActionData))\n  return handlePostApi()\n}\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport reducer from '../src/react-app/reducers/index'\nimport getMiddleware from './common/middlewares/getAPI'\nimport postMiddleware from './common/middlewares/postAPI'\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nlet store\n\nif (process.env.NODE_ENV === 'development') {\n  store = createStore(reducer, composeEnhances(\n    applyMiddleware(thunk, getMiddleware, postMiddleware),\n    applyMiddleware(logger)\n  ))\n} else {\n  store = createStore(reducer, composeEnhances(\n    applyMiddleware(thunk, getMiddleware, postMiddleware)\n  ))\n}\n\nexport default store\n","import React from 'react'\nimport { Row, Col } from 'antd'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\n\nclass BaseContent extends React.Component {\n  render() {\n    return (\n      <Row className='padding--sides width-100 height-100 background-offwhite'>\n        <Col span={24} className='f48 center strong' >\n          Welcome to Fisher's Map - The Heatmap to show strengths and weaknesses at a particular chessboard position.\n        </Col>\n      </Row>\n    )\n  }\n}\n\nBaseContent.propTypes = {\n  base: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = ({ base }) => {\n  return {\n    base\n  }\n}\n\nexport default connect(\n  mapStateToProps, {\n})(BaseContent)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Button } from 'antd'\n\nconst PageNotFound = () => {\n  return (\n    <Row style={{ marginTop: 60, textAlign: 'center', width: '100%' }}>\n      <Col span={12} offset={6} >\n        <h1 className='f48'> 404 </h1>\n        <h2 className='f36'> PAGE NOT FOUND </h2>\n        <h3 className='text-light-grey'> &quot; Not all those who wander are lost &quot; </h3>\n        <Button type='primary'>\n          <Link to=\"/\"> Go to Homepage </Link>\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default PageNotFound\n","import React from 'react'\nimport { Row } from 'antd'\nimport {\n  Route,\n  Switch\n} from 'react-router-dom'\nimport posed, { PoseGroup } from 'react-pose'\n\nimport BaseContent from '../components/main-content/BaseContent'\nimport PageNotFound from '../../common/error-pages/PageNotFound'\n\nconst RouteContainer = posed.div({\n  enter: { opacity: 1, delay: 300, beforeChildren: true },\n  exit: { opacity: 0 }\n})\n\nfunction MainContent () {\n  return (\n    <Route\n      render={({ location }) => (\n        <Row className='overflow-auto display-block'>\n          <PoseGroup>\n            <RouteContainer key={999999}>\n              <Switch location={location}>\n                <Route path=\"/\" component={BaseContent} key=\"base\" />\n                <Route render={() => <PageNotFound />} key=\"notFound\" />\n              </Switch>\n            </RouteContainer>\n          </PoseGroup>\n        </Row>\n      )} />\n  )\n}\n\nexport default MainContent\n","import React from 'react'\nimport { Layout } from 'antd'\n\nimport MainContent from './MainContent'\n\nconst { Content } = Layout\n\nfunction Base () {\n  return (\n    <Layout className='height-min-100'>\n      <Content theme='light' className='height-min-100'>\n        <MainContent />\n      </Content>\n    </Layout>\n  )\n}\n\nexport default Base\n","import './App.css'\n\nimport React from 'react'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport Base from './react-app/components/Base'\n\n\nconst App = () => (\n  <Router>\n    <div className='height-100'>\n      <Switch>\n        <Route path=\"/\" component={Base} />\n      </Switch>\n    </div>\n  </Router>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\n\nimport store from './store'\nimport './index.css'\nimport App from './App'\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('app_root'))\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}